
{
	"scope": "source.pawn - variable.other.pawn",
	"completions":
	[
		"STREAMER_TYPE_OBJECT",
		"STREAMER_TYPE_PICKUP",
		"STREAMER_TYPE_CP",
		"STREAMER_TYPE_RACE_CP",
		"STREAMER_TYPE_MAP_ICON",
		"STREAMER_TYPE_3D_TEXT_LABEL",
		"STREAMER_TYPE_AREA",
		"STREAMER_AREA_TYPE_CIRCLE",
		"STREAMER_AREA_TYPE_CYLINDER",
		"STREAMER_AREA_TYPE_SPHERE",
		"STREAMER_AREA_TYPE_RECTANGLE",
		"STREAMER_AREA_TYPE_CUBOID",
		"STREAMER_AREA_TYPE_POLYGON",
		"STREAMER_OBJECT_TYPE_GLOBAL",
		"STREAMER_OBJECT_TYPE_PLAYER",
		"STREAMER_OBJECT_TYPE_DYNAMIC",
		"FLOAT_INFINITY",
		{"trigger": "Streamer_GetTickRate", "contents": "Streamer_GetTickRate()"},
		{"trigger": "Streamer_SetTickRate", "contents": "Streamer_SetTickRate(${1:rate})"},
		{"trigger": "Streamer_GetMaxItems", "contents": "Streamer_GetMaxItems(${1:type})"},
		{"trigger": "Streamer_SetMaxItems", "contents": "Streamer_SetMaxItems(${1:type}, ${2:items})"},
		{"trigger": "Streamer_GetVisibleItems", "contents": "Streamer_GetVisibleItems(${1:type}, ${2:playerid = -1})"},
		{"trigger": "Streamer_SetVisibleItems", "contents": "Streamer_SetVisibleItems(${1:type}, ${2:items}, ${3:playerid = -1})"},
		{"trigger": "Streamer_GetRadiusMultiplier", "contents": "Streamer_GetRadiusMultiplier(${1:type}, ${2:Float:multiplier}, ${3:playerid = -1})"},
		{"trigger": "Streamer_SetRadiusMultiplier", "contents": "Streamer_SetRadiusMultiplier(${1:type}, ${2:Float:multiplier}, ${3:playerid = -1})"},
		{"trigger": "Streamer_GetCellDistance", "contents": "Streamer_GetCellDistance(${1:Float:distance})"},
		{"trigger": "Streamer_SetCellDistance", "contents": "Streamer_SetCellDistance(${1:Float:distance})"},
		{"trigger": "Streamer_GetCellSize", "contents": "Streamer_GetCellSize(${1:Float:size})"},
		{"trigger": "Streamer_SetCellSize", "contents": "Streamer_SetCellSize(${1:Float:size})"},
		{"trigger": "Streamer_ToggleErrorCallback", "contents": "Streamer_ToggleErrorCallback(${1:toggle})"},
		{"trigger": "Streamer_IsToggleErrorCallback", "contents": "Streamer_IsToggleErrorCallback()"},
		{"trigger": "Streamer_ProcessActiveItems", "contents": "Streamer_ProcessActiveItems()"},
		{"trigger": "Streamer_ToggleIdleUpdate", "contents": "Streamer_ToggleIdleUpdate(${1:playerid}, ${2:toggle})"},
		{"trigger": "Streamer_IsToggleIdleUpdate", "contents": "Streamer_IsToggleIdleUpdate(${1:playerid})"},
		{"trigger": "Streamer_ToggleItemUpdate", "contents": "Streamer_ToggleItemUpdate(${1:playerid}, ${2:type}, ${3:toggle})"},
		{"trigger": "Streamer_IsToggleItemUpdate", "contents": "Streamer_IsToggleItemUpdate(${1:playerid}, ${2:type})"},
		{"trigger": "Streamer_Update", "contents": "Streamer_Update(${1:playerid}, ${2:type = -1})"},
		{"trigger": "Streamer_UpdateEx", "contents": "Streamer_UpdateEx(${1:playerid}, ${2:Float:x}, ${3:Float:y}, ${4:Float:z}, ${5:worldid = -1}, ${6:interiorid = -1}, ${7:type = -1})"},
		{"trigger": "Streamer_GetFloatData", "contents": "Streamer_GetFloatData(${1:type}, ${2:id}, ${3:data}, ${4:Float:result})"},
		{"trigger": "Streamer_SetFloatData", "contents": "Streamer_SetFloatData(${1:type}, ${2:id}, ${3:data}, ${4:Float:value})"},
		{"trigger": "Streamer_GetIntData", "contents": "Streamer_GetIntData(${1:type}, ${2:id}, ${3:data})"},
		{"trigger": "Streamer_SetIntData", "contents": "Streamer_SetIntData(${1:type}, ${2:id}, ${3:data}, ${4:value})"},
		{"trigger": "Streamer_GetArrayData", "contents": "Streamer_GetArrayData(${1:type}, ${2:id}, ${3:data}, ${4:dest[]}, ${5:maxdest = sizeof dest})"},
		{"trigger": "Streamer_SetArrayData", "contents": "Streamer_SetArrayData(${1:type}, ${2:id}, ${3:data}, ${4:const src[]}, ${5:maxsrc = sizeof src})"},
		{"trigger": "Streamer_IsInArrayData", "contents": "Streamer_IsInArrayData(${1:type}, ${2:id}, ${3:data}, ${4:value})"},
		{"trigger": "Streamer_AppendArrayData", "contents": "Streamer_AppendArrayData(${1:type}, ${2:id}, ${3:data}, ${4:value})"},
		{"trigger": "Streamer_RemoveArrayData", "contents": "Streamer_RemoveArrayData(${1:type}, ${2:id}, ${3:data}, ${4:value})"},
		{"trigger": "Streamer_GetUpperBound", "contents": "Streamer_GetUpperBound(${1:type})"},
		{"trigger": "Streamer_GetDistanceToItem", "contents": "Streamer_GetDistanceToItem(${1:Float:x}, ${2:Float:y}, ${3:Float:z}, ${4:type}, ${5:id}, ${6:Float:distance}, ${7:dimensions = 3})"},
		{"trigger": "Streamer_GetItemInternalID", "contents": "Streamer_GetItemInternalID(${1:playerid}, ${2:type}, ${3:streamerid})"},
		{"trigger": "Streamer_GetItemStreamerID", "contents": "Streamer_GetItemStreamerID(${1:playerid}, ${2:type}, ${3:internalid})"},
		{"trigger": "Streamer_IsItemVisible", "contents": "Streamer_IsItemVisible(${1:playerid}, ${2:type}, ${3:id})"},
		{"trigger": "Streamer_DestroyAllVisibleItems", "contents": "Streamer_DestroyAllVisibleItems(${1:playerid}, ${2:type}, ${3:serverwide = 1})"},
		{"trigger": "Streamer_CountVisibleItems", "contents": "Streamer_CountVisibleItems(${1:playerid}, ${2:type}, ${3:serverwide = 1})"},
		{"trigger": "Streamer_DestroyAllItems", "contents": "Streamer_DestroyAllItems(${1:type}, ${2:serverwide = 1})"},
		{"trigger": "Streamer_CountItems", "contents": "Streamer_CountItems(${1:type}, ${2:serverwide = 1})"},
		{"trigger": "CreateDynamicObject", "contents": "CreateDynamicObject(${1:modelid}, ${2:Float:x}, ${3:Float:y}, ${4:Float:z}, ${5:Float:rx}, ${6:Float:ry}, ${7:Float:rz}, ${8:worldid = -1}, ${9:interiorid = -1}, ${10:playerid = -1}, ${11:Float:streamdistance = 200.0}, ${12:Float:drawdistance = 0.0})"},
		{"trigger": "DestroyDynamicObject", "contents": "DestroyDynamicObject(${1:objectid})"},
		{"trigger": "IsValidDynamicObject", "contents": "IsValidDynamicObject(${1:objectid})"},
		{"trigger": "SetDynamicObjectPos", "contents": "SetDynamicObjectPos(${1:objectid}, ${2:Float:x}, ${3:Float:y}, ${4:Float:z})"},
		{"trigger": "GetDynamicObjectPos", "contents": "GetDynamicObjectPos(${1:objectid}, ${2:Float:x}, ${3:Float:y}, ${4:Float:z})"},
		{"trigger": "SetDynamicObjectRot", "contents": "SetDynamicObjectRot(${1:objectid}, ${2:Float:rx}, ${3:Float:ry}, ${4:Float:rz})"},
		{"trigger": "GetDynamicObjectRot", "contents": "GetDynamicObjectRot(${1:objectid}, ${2:Float:rx}, ${3:Float:ry}, ${4:Float:rz})"},
		{"trigger": "MoveDynamicObject", "contents": "MoveDynamicObject(${1:objectid}, ${2:Float:x}, ${3:Float:y}, ${4:Float:z}, ${5:Float:speed}, ${6:Float:rx = -1000.0}, ${7:Float:ry = -1000.0}, ${8:Float:rz = -1000.0})"},
		{"trigger": "StopDynamicObject", "contents": "StopDynamicObject(${1:objectid})"},
		{"trigger": "IsDynamicObjectMoving", "contents": "IsDynamicObjectMoving(${1:objectid})"},
		{"trigger": "AttachCameraToDynamicObject", "contents": "AttachCameraToDynamicObject(${1:playerid}, ${2:objectid})"},
		{"trigger": "AttachDynamicObjectToObject", "contents": "AttachDynamicObjectToObject(${1:objectid}, ${2:attachtoid}, ${3:Float:offsetx}, ${4:Float:offsety}, ${5:Float:offsetz}, ${6:Float:rx}, ${7:Float:ry}, ${8:Float:rz}, ${9:syncrotation = 1})"},
		{"trigger": "AttachDynamicObjectToPlayer", "contents": "AttachDynamicObjectToPlayer(${1:objectid}, ${2:playerid}, ${3:Float:offsetx}, ${4:Float:offsety}, ${5:Float:offsetz}, ${6:Float:rx}, ${7:Float:ry}, ${8:Float:rz})"},
		{"trigger": "AttachDynamicObjectToVehicle", "contents": "AttachDynamicObjectToVehicle(${1:objectid}, ${2:vehicleid}, ${3:Float:offsetx}, ${4:Float:offsety}, ${5:Float:offsetz}, ${6:Float:rx}, ${7:Float:ry}, ${8:Float:rz})"},
		{"trigger": "EditDynamicObject", "contents": "EditDynamicObject(${1:playerid}, ${2:objectid})"},
		{"trigger": "GetDynamicObjectMaterial", "contents": "GetDynamicObjectMaterial(${1:objectid}, ${2:materialindex}, ${3:modelid}, ${4:txdname[]}, ${5:texturename[]}, ${6:materialcolor}, ${7:maxtxdname = sizeof txdname}, ${8:maxtexturename = sizeof texturename})"},
		{"trigger": "SetDynamicObjectMaterial", "contents": "SetDynamicObjectMaterial(${1:objectid}, ${2:materialindex}, ${3:modelid}, ${4:const txdname[]}, ${5:const texturename[]}, ${6:materialcolor = 0})"},
		{"trigger": "GetDynamicObjectMaterialText", "contents": "GetDynamicObjectMaterialText(${1:objectid}, ${2:materialindex}, ${3:text[]}, ${4:materialsize}, ${5:fontface[]}, ${6:fontsize}, ${7:bold}, ${8:fontcolor}, ${9:backcolor}, ${10:textalignment}, ${11:maxtext = sizeof text}, ${12:maxfontface = sizeof fontface})"},
		{"trigger": "SetDynamicObjectMaterialText", "contents": "SetDynamicObjectMaterialText(${1:objectid}, ${2:materialindex}, ${3:const text[]}, ${4:materialsize = OBJECT_MATERIAL_SIZE_256x128}, ${5:const fontface[] = \"Arial\"}, ${6:fontsize = 24}, ${7:bold = 1}, ${8:fontcolor = 0xFFFFFFFF}, ${9:backcolor = 0}, ${10:textalignment = 0})"},
		{"trigger": "CreateDynamicPickup", "contents": "CreateDynamicPickup(${1:modelid}, ${2:type}, ${3:Float:x}, ${4:Float:y}, ${5:Float:z}, ${6:worldid = -1}, ${7:interiorid = -1}, ${8:playerid = -1}, ${9:Float:streamdistance = 100.0})"},
		{"trigger": "DestroyDynamicPickup", "contents": "DestroyDynamicPickup(${1:pickupid})"},
		{"trigger": "IsValidDynamicPickup", "contents": "IsValidDynamicPickup(${1:pickupid})"},
		{"trigger": "CreateDynamicCP", "contents": "CreateDynamicCP(${1:Float:x}, ${2:Float:y}, ${3:Float:z}, ${4:Float:size}, ${5:worldid = -1}, ${6:interiorid = -1}, ${7:playerid = -1}, ${8:Float:streamdistance = 100.0})"},
		{"trigger": "DestroyDynamicCP", "contents": "DestroyDynamicCP(${1:checkpointid})"},
		{"trigger": "IsValidDynamicCP", "contents": "IsValidDynamicCP(${1:checkpointid})"},
		{"trigger": "TogglePlayerDynamicCP", "contents": "TogglePlayerDynamicCP(${1:playerid}, ${2:checkpointid}, ${3:toggle})"},
		{"trigger": "TogglePlayerAllDynamicCPs", "contents": "TogglePlayerAllDynamicCPs(${1:playerid}, ${2:toggle})"},
		{"trigger": "IsPlayerInDynamicCP", "contents": "IsPlayerInDynamicCP(${1:playerid}, ${2:checkpointid})"},
		{"trigger": "GetPlayerVisibleDynamicCP", "contents": "GetPlayerVisibleDynamicCP(${1:playerid})"},
		{"trigger": "CreateDynamicRaceCP", "contents": "CreateDynamicRaceCP(${1:type}, ${2:Float:x}, ${3:Float:y}, ${4:Float:z}, ${5:Float:nextx}, ${6:Float:nexty}, ${7:Float:nextz}, ${8:Float:size}, ${9:worldid = -1}, ${10:interiorid = -1}, ${11:playerid = -1}, ${12:Float:streamdistance = 100.0})"},
		{"trigger": "DestroyDynamicRaceCP", "contents": "DestroyDynamicRaceCP(${1:checkpointid})"},
		{"trigger": "IsValidDynamicRaceCP", "contents": "IsValidDynamicRaceCP(${1:checkpointid})"},
		{"trigger": "TogglePlayerDynamicRaceCP", "contents": "TogglePlayerDynamicRaceCP(${1:playerid}, ${2:checkpointid}, ${3:toggle})"},
		{"trigger": "TogglePlayerAllDynamicRaceCPs", "contents": "TogglePlayerAllDynamicRaceCPs(${1:playerid}, ${2:toggle})"},
		{"trigger": "IsPlayerInDynamicRaceCP", "contents": "IsPlayerInDynamicRaceCP(${1:playerid}, ${2:checkpointid})"},
		{"trigger": "GetPlayerVisibleDynamicRaceCP", "contents": "GetPlayerVisibleDynamicRaceCP(${1:playerid})"},
		{"trigger": "CreateDynamicMapIcon", "contents": "CreateDynamicMapIcon(${1:Float:x}, ${2:Float:y}, ${3:Float:z}, ${4:type}, ${5:color}, ${6:worldid = -1}, ${7:interiorid = -1}, ${8:playerid = -1}, ${9:Float:streamdistance = 100.0}, ${10:style = MAPICON_LOCAL})"},
		{"trigger": "DestroyDynamicMapIcon", "contents": "DestroyDynamicMapIcon(${1:iconid})"},
		{"trigger": "IsValidDynamicMapIcon", "contents": "IsValidDynamicMapIcon(${1:iconid})"},
		{"trigger": "CreateDynamic3DTextLabel", "contents": "CreateDynamic3DTextLabel(${1:const text[]}, ${2:color}, ${3:Float:x}, ${4:Float:y}, ${5:Float:z}, ${6:Float:drawdistance}, ${7:attachedplayer = INVALID_PLAYER_ID}, ${8:attachedvehicle = INVALID_VEHICLE_ID}, ${9:testlos = 0}, ${10:worldid = -1}, ${11:interiorid = -1}, ${12:playerid = -1}, ${13:Float:streamdistance = 100.0})"},
		{"trigger": "DestroyDynamic3DTextLabel", "contents": "DestroyDynamic3DTextLabel(${1:Text3D:id})"},
		{"trigger": "IsValidDynamic3DTextLabel", "contents": "IsValidDynamic3DTextLabel(${1:Text3D:id})"},
		{"trigger": "GetDynamic3DTextLabelText", "contents": "GetDynamic3DTextLabelText(${1:Text3D:id}, ${2:text[]}, ${3:maxtext = sizeof text})"},
		{"trigger": "UpdateDynamic3DTextLabelText", "contents": "UpdateDynamic3DTextLabelText(${1:Text3D:id}, ${2:color}, ${3:const text[]})"},
		{"trigger": "CreateDynamicCircle", "contents": "CreateDynamicCircle(${1:Float:x}, ${2:Float:y}, ${3:Float:size}, ${4:worldid = -1}, ${5:interiorid = -1}, ${6:playerid = -1})"},
		{"trigger": "CreateDynamicCylinder", "contents": "CreateDynamicCylinder(${1:Float:x}, ${2:Float:y}, ${3:Float:minz}, ${4:Float:maxz}, ${5:Float:size}, ${6:worldid = -1}, ${7:interiorid = -1}, ${8:playerid = -1})"},
		{"trigger": "CreateDynamicSphere", "contents": "CreateDynamicSphere(${1:Float:x}, ${2:Float:y}, ${3:Float:z}, ${4:Float:size}, ${5:worldid = -1}, ${6:interiorid = -1}, ${7:playerid = -1})"},
		{"trigger": "CreateDynamicRectangle", "contents": "CreateDynamicRectangle(${1:Float:minx}, ${2:Float:miny}, ${3:Float:maxx}, ${4:Float:maxy}, ${5:worldid = -1}, ${6:interiorid = -1}, ${7:playerid = -1})"},
		{"trigger": "CreateDynamicCuboid", "contents": "CreateDynamicCuboid(${1:Float:minx}, ${2:Float:miny}, ${3:Float:minz}, ${4:Float:maxx}, ${5:Float:maxy}, ${6:Float:maxz}, ${7:worldid = -1}, ${8:interiorid = -1}, ${9:playerid = -1})"},
		{"trigger": "CreateDynamicCube", "contents": "CreateDynamicCube(${1:Float:minx}, ${2:Float:miny}, ${3:Float:minz}, ${4:Float:maxx}, ${5:Float:maxy}, ${6:Float:maxz}, ${7:worldid = -1}, ${8:interiorid = -1}, ${9:playerid = -1})"},
		{"trigger": "CreateDynamicPolygon", "contents": "CreateDynamicPolygon(${1:Float:points[]}, ${2:Float:minz = -FLOAT_INFINITY}, ${3:Float:maxz = FLOAT_INFINITY}, ${4:maxpoints = sizeof points}, ${5:worldid = -1}, ${6:interiorid = -1}, ${7:playerid = -1})"},
		{"trigger": "DestroyDynamicArea", "contents": "DestroyDynamicArea(${1:areaid})"},
		{"trigger": "IsValidDynamicArea", "contents": "IsValidDynamicArea(${1:areaid})"},
		{"trigger": "GetDynamicPolygonPoints", "contents": "GetDynamicPolygonPoints(${1:areaid}, ${2:Float:points[]}, ${3:maxpoints = sizeof points})"},
		{"trigger": "GetDynamicPolygonNumberPoints", "contents": "GetDynamicPolygonNumberPoints(${1:areaid})"},
		{"trigger": "TogglePlayerDynamicArea", "contents": "TogglePlayerDynamicArea(${1:playerid}, ${2:areaid}, ${3:toggle})"},
		{"trigger": "TogglePlayerAllDynamicAreas", "contents": "TogglePlayerAllDynamicAreas(${1:playerid}, ${2:toggle})"},
		{"trigger": "IsPlayerInDynamicArea", "contents": "IsPlayerInDynamicArea(${1:playerid}, ${2:areaid}, ${3:recheck = 0})"},
		{"trigger": "IsPlayerInAnyDynamicArea", "contents": "IsPlayerInAnyDynamicArea(${1:playerid}, ${2:recheck = 0})"},
		{"trigger": "IsAnyPlayerInDynamicArea", "contents": "IsAnyPlayerInDynamicArea(${1:areaid}, ${2:recheck = 0})"},
		{"trigger": "IsAnyPlayerInAnyDynamicArea", "contents": "IsAnyPlayerInAnyDynamicArea(${1:recheck = 0})"},
		{"trigger": "GetPlayerDynamicAreas", "contents": "GetPlayerDynamicAreas(${1:playerid}, ${2:areas[]}, ${3:maxareas = sizeof areas})"},
		{"trigger": "GetPlayerNumberDynamicAreas", "contents": "GetPlayerNumberDynamicAreas(${1:playerid})"},
		{"trigger": "IsPointInDynamicArea", "contents": "IsPointInDynamicArea(${1:areaid}, ${2:Float:x}, ${3:Float:y}, ${4:Float:z})"},
		{"trigger": "IsPointInAnyDynamicArea", "contents": "IsPointInAnyDynamicArea(${1:Float:x}, ${2:Float:y}, ${3:Float:z})"},
		{"trigger": "AttachDynamicAreaToObject", "contents": "AttachDynamicAreaToObject(${1:areaid}, ${2:objectid}, ${3:type = STREAMER_OBJECT_TYPE_DYNAMIC}, ${4:playerid = INVALID_PLAYER_ID})"},
		{"trigger": "AttachDynamicAreaToPlayer", "contents": "AttachDynamicAreaToPlayer(${1:areaid}, ${2:playerid})"},
		{"trigger": "AttachDynamicAreaToVehicle", "contents": "AttachDynamicAreaToVehicle(${1:areaid}, ${2:vehicleid})"},
		{"trigger": "CreateDynamicObjectEx", "contents": "CreateDynamicObjectEx(${1:modelid}, ${2:Float:x}, ${3:Float:y}, ${4:Float:z}, ${5:Float:rx}, ${6:Float:ry}, ${7:Float:rz}, ${8:Float:drawdistance = 0.0}, ${9:Float:streamdistance = 200.0}, ${10:worlds[] = { -1 }}, ${11:interiors[] = { -1 }}, ${12:players[] = { -1 }}, ${13:maxworlds = sizeof worlds}, ${14:maxinteriors = sizeof interiors}, ${15:maxplayers = sizeof players})"},
		{"trigger": "CreateDynamicPickupEx", "contents": "CreateDynamicPickupEx(${1:modelid}, ${2:type}, ${3:Float:x}, ${4:Float:y}, ${5:Float:z}, ${6:Float:streamdistance = 100.0}, ${7:worlds[] = { -1 }}, ${8:interiors[] = { -1 }}, ${9:players[] = { -1 }}, ${10:maxworlds = sizeof worlds}, ${11:maxinteriors = sizeof interiors}, ${12:maxplayers = sizeof players})"},
		{"trigger": "CreateDynamicCPEx", "contents": "CreateDynamicCPEx(${1:Float:x}, ${2:Float:y}, ${3:Float:z}, ${4:Float:size}, ${5:Float:streamdistance = 100.0}, ${6:worlds[] = { -1 }}, ${7:interiors[] = { -1 }}, ${8:players[] = { -1 }}, ${9:maxworlds = sizeof worlds}, ${10:maxinteriors = sizeof interiors}, ${11:maxplayers = sizeof players})"},
		{"trigger": "CreateDynamicRaceCPEx", "contents": "CreateDynamicRaceCPEx(${1:type}, ${2:Float:x}, ${3:Float:y}, ${4:Float:z}, ${5:Float:nextx}, ${6:Float:nexty}, ${7:Float:nextz}, ${8:Float:size}, ${9:Float:streamdistance = 100.0}, ${10:worlds[] = { -1 }}, ${11:interiors[] = { -1 }}, ${12:players[] = { -1 }}, ${13:maxworlds = sizeof worlds}, ${14:maxinteriors = sizeof interiors}, ${15:maxplayers = sizeof players})"},
		{"trigger": "CreateDynamicMapIconEx", "contents": "CreateDynamicMapIconEx(${1:Float:x}, ${2:Float:y}, ${3:Float:z}, ${4:type}, ${5:color}, ${6:style = MAPICON_LOCAL}, ${7:Float:streamdistance = 100.0}, ${8:worlds[] = { -1 }}, ${9:interiors[] = { -1 }}, ${10:players[] = { -1 }}, ${11:maxworlds = sizeof worlds}, ${12:maxinteriors = sizeof interiors}, ${13:maxplayers = sizeof players})"},
		{"trigger": "CreateDynamic3DTextLabelEx", "contents": "CreateDynamic3DTextLabelEx(${1:const text[]}, ${2:color}, ${3:Float:x}, ${4:Float:y}, ${5:Float:z}, ${6:Float:drawdistance}, ${7:attachedplayer = INVALID_PLAYER_ID}, ${8:attachedvehicle = INVALID_VEHICLE_ID}, ${9:testlos = 0}, ${10:Float:streamdistance = 100.0}, ${11:worlds[] = { -1 }}, ${12:interiors[] = { -1 }}, ${13:players[] = { -1 }}, ${14:maxworlds = sizeof worlds}, ${15:maxinteriors = sizeof interiors}, ${16:maxplayers = sizeof players})"},
		{"trigger": "CreateDynamicCircleEx", "contents": "CreateDynamicCircleEx(${1:Float:x}, ${2:Float:y}, ${3:Float:size}, ${4:worlds[] = { -1 }}, ${5:interiors[] = { -1 }}, ${6:players[] = { -1 }}, ${7:maxworlds = sizeof worlds}, ${8:maxinteriors = sizeof interiors}, ${9:maxplayers = sizeof players})"},
		{"trigger": "CreateDynamicCylinderEx", "contents": "CreateDynamicCylinderEx(${1:Float:x}, ${2:Float:y}, ${3:Float:minz}, ${4:Float:maxz}, ${5:Float:size}, ${6:worlds[] = { -1 }}, ${7:interiors[] = { -1 }}, ${8:players[] = { -1 }}, ${9:maxworlds = sizeof worlds}, ${10:maxinteriors = sizeof interiors}, ${11:maxplayers = sizeof players})"},
		{"trigger": "CreateDynamicSphereEx", "contents": "CreateDynamicSphereEx(${1:Float:x}, ${2:Float:y}, ${3:Float:z}, ${4:Float:size}, ${5:worlds[] = { -1 }}, ${6:interiors[] = { -1 }}, ${7:players[] = { -1 }}, ${8:maxworlds = sizeof worlds}, ${9:maxinteriors = sizeof interiors}, ${10:maxplayers = sizeof players})"},
		{"trigger": "CreateDynamicRectangleEx", "contents": "CreateDynamicRectangleEx(${1:Float:minx}, ${2:Float:miny}, ${3:Float:maxx}, ${4:Float:maxy}, ${5:worlds[] = { -1 }}, ${6:interiors[] = { -1 }}, ${7:players[] = { -1 }}, ${8:maxworlds = sizeof worlds}, ${9:maxinteriors = sizeof interiors}, ${10:maxplayers = sizeof players})"},
		{"trigger": "CreateDynamicCuboidEx", "contents": "CreateDynamicCuboidEx(${1:Float:minx}, ${2:Float:miny}, ${3:Float:minz}, ${4:Float:maxx}, ${5:Float:maxy}, ${6:Float:maxz}, ${7:worlds[] = { -1 }}, ${8:interiors[] = { -1 }}, ${9:players[] = { -1 }}, ${10:maxworlds = sizeof worlds}, ${11:maxinteriors = sizeof interiors}, ${12:maxplayers = sizeof players})"},
		{"trigger": "CreateDynamicCubeEx", "contents": "CreateDynamicCubeEx(${1:Float:minx}, ${2:Float:miny}, ${3:Float:minz}, ${4:Float:maxx}, ${5:Float:maxy}, ${6:Float:maxz}, ${7:worlds[] = { -1 }}, ${8:interiors[] = { -1 }}, ${9:players[] = { -1 }}, ${10:maxworlds = sizeof worlds}, ${11:maxinteriors = sizeof interiors}, ${12:maxplayers = sizeof players})"},
		{"trigger": "CreateDynamicPolygonEx", "contents": "CreateDynamicPolygonEx(${1:Float:points[]}, ${2:Float:minz = -FLOAT_INFINITY}, ${3:Float:maxz = FLOAT_INFINITY}, ${4:maxpoints = sizeof points}, ${5:worlds[] = { -1 }}, ${6:interiors[] = { -1 }}, ${7:players[] = { -1 }}, ${8:maxworlds = sizeof worlds}, ${9:maxinteriors = sizeof interiors}, ${10:maxplayers = sizeof players})"},
		{"trigger": "Streamer_TickRate", "contents": "Streamer_TickRate(${1:rate})"},
		{"trigger": "Streamer_MaxItems", "contents": "Streamer_MaxItems(${1:type}, ${2:items})"},
		{"trigger": "Streamer_VisibleItems", "contents": "Streamer_VisibleItems(${1:type}, ${2:items}, ${3:playerid = -1})"},
		{"trigger": "Streamer_CellDistance", "contents": "Streamer_CellDistance(${1:Float:distance})"},
		{"trigger": "Streamer_CellSize", "contents": "Streamer_CellSize(${1:Float:size})"},
		{"trigger": "Streamer_CallbackHook", "contents": "Streamer_CallbackHook(${1:callback}, ${2:...})"},
		{"trigger": "DestroyAllDynamicObjects", "contents": "DestroyAllDynamicObjects()"},
		{"trigger": "CountDynamicObjects", "contents": "CountDynamicObjects()"},
		{"trigger": "DestroyAllDynamicPickups", "contents": "DestroyAllDynamicPickups()"},
		{"trigger": "CountDynamicPickups", "contents": "CountDynamicPickups()"},
		{"trigger": "DestroyAllDynamicCPs", "contents": "DestroyAllDynamicCPs()"},
		{"trigger": "CountDynamicCPs", "contents": "CountDynamicCPs()"},
		{"trigger": "DestroyAllDynamicRaceCPs", "contents": "DestroyAllDynamicRaceCPs()"},
		{"trigger": "CountDynamicRaceCPs", "contents": "CountDynamicRaceCPs()"},
		{"trigger": "DestroyAllDynamicMapIcons", "contents": "DestroyAllDynamicMapIcons()"},
		{"trigger": "CountDynamicMapIcons", "contents": "CountDynamicMapIcons()"},
		{"trigger": "DestroyAllDynamic3DTextLabels", "contents": "DestroyAllDynamic3DTextLabels()"},
		{"trigger": "CountDynamic3DTextLabels", "contents": "CountDynamic3DTextLabels()"},
		{"trigger": "DestroyAllDynamicAreas", "contents": "DestroyAllDynamicAreas()"},
		{"trigger": "CountDynamicAreas", "contents": "CountDynamicAreas()"},
		{"trigger": "OnDynamicObjectMoved", "contents": "OnDynamicObjectMoved(${1:objectid})"},
		{"trigger": "OnPlayerEditDynamicObject", "contents": "OnPlayerEditDynamicObject(${1:playerid}, ${2:objectid}, ${3:response}, ${4:Float:x}, ${5:Float:y}, ${6:Float:z}, ${7:Float:rx}, ${8:Float:ry}, ${9:Float:rz})"},
		{"trigger": "OnPlayerSelectDynamicObject", "contents": "OnPlayerSelectDynamicObject(${1:playerid}, ${2:objectid}, ${3:modelid}, ${4:Float:x}, ${5:Float:y}, ${6:Float:z})"},
		{"trigger": "OnPlayerShootDynamicObject", "contents": "OnPlayerShootDynamicObject(${1:playerid}, ${2:weaponid}, ${3:objectid}, ${4:Float:x}, ${5:Float:y}, ${6:Float:z})"},
		{"trigger": "OnPlayerPickUpDynamicPickup", "contents": "OnPlayerPickUpDynamicPickup(${1:playerid}, ${2:pickupid})"},
		{"trigger": "OnPlayerEnterDynamicCP", "contents": "OnPlayerEnterDynamicCP(${1:playerid}, ${2:checkpointid})"},
		{"trigger": "OnPlayerLeaveDynamicCP", "contents": "OnPlayerLeaveDynamicCP(${1:playerid}, ${2:checkpointid})"},
		{"trigger": "OnPlayerEnterDynamicRaceCP", "contents": "OnPlayerEnterDynamicRaceCP(${1:playerid}, ${2:checkpointid})"},
		{"trigger": "OnPlayerLeaveDynamicRaceCP", "contents": "OnPlayerLeaveDynamicRaceCP(${1:playerid}, ${2:checkpointid})"},
		{"trigger": "OnPlayerEnterDynamicArea", "contents": "OnPlayerEnterDynamicArea(${1:playerid}, ${2:areaid})"},
		{"trigger": "OnPlayerLeaveDynamicArea", "contents": "OnPlayerLeaveDynamicArea(${1:playerid}, ${2:areaid})"},
		{"trigger": "Streamer_OnPluginError", "contents": "Streamer_OnPluginError(${1:error[]})"}
	]
}
